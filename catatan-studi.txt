python import: module/package

odoo module == python package
https://www.odoo.com/documentation/12.0/howtos/backend.html#module-structure
https://docs.python.org/2/tutorial/modules.html#packages

file XML (yang saat ini untuk definisi view) sejatinya file data
  data XML ini secara umum untuk bikin/update record model di database
  caranya, bikin entry record di XML yang menunjukkan:
    model yang ingin dituju
    id record
    field yang ditunjuk dari namanya serta nilai fieldnya

menu & view bisa tampil di aplikasi kalau sudah dikasih akses
  yang didefinisikan lewat file akses csv
model id di field file csv security access harus dari model yang ada
nilai model pakai underscore, bukan dot

nama model untuk field relasi Many2one tanpa nama variable parameter,
  langsung string nama modelnya
  fields.Many2one('res.users')

security/access menentukan permission untuk memperbolehkan:
  - lihat data          -> perm_read
  - edit data           -> perm_write
  - tambahkan/buat data -> perm_create

memodifikasi model & view yang sudah ada tidak langsung di file class-nya
  tapi dengan meng-inherit class aslinya dari file baru --> Inheritance
  class asli/parent masih utuh
  modifikasinya ada di file baru

decorators...
  @api.depends()
  @api.onchange()
  @api.constrains()

Model constraint dengan Python Constraint diterapkan dengan pakai
  method model ber-decorator @api.constrains()

SQL Constraint diterapkan dengan pakai
  atribut model _sql_constraints

> self < pada model itu recordset, isinya data kumpulan record suatu model
  - bisa mengakses tiap recordnya dengan perulangan loop
  - bisa mengakses fieldnya dengan nama properti class modelnya dengan setelah di loop

root element (view)
  elemen root yang dipasang di dalam field 'arch' di XML model view

view kanban untuk suatu model dimulai dengan elemen root: <kanban>
  elemen <kanban> punya atribut: default_group_by="nama_field" untuk
    mengelompokkan card dalam list berdasarkan nama field yang diisikan pada atribut
  xml yang dicantumkan dalam <kanban> itu struktur untuk card yang akan ditampilkan
    (struktur-struktur yang disediakan mungkin bisa dilihat di dokumentasi (?))
  struktur card kanban dibuat dari campuran elemen form, html, & QWeb
  hasilnya adalah kanban board full, card yang ditumpuk dalam 1 list berkategori sama,
    dengan beberapa list/kolom